const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios');
const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());
app.use(express.static('public')); // Serve your HTML from 'public' folder

// ----- MPESA Daraja Credentials -----
const mpesaEnv = "sandbox"; // Change to "production" when live
const consumerKey = "YOUR_CONSUMER_KEY";
const consumerSecret = "YOUR_CONSUMER_SECRET";
const shortcode = "YOUR_SHORTCODE"; // Till/Paybill number
const passkey = "YOUR_PASSKEY";     // Lipa Na M-PESA Passkey
const callbackURL = "https://yourdomain.com/callback"; // Must be HTTPS

// Generate access token
async function getAccessToken() {
  const url =
    mpesaEnv === "production"
      ? "https://api.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials"
      : "https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials";

  const auth = Buffer.from(`${consumerKey}:${consumerSecret}`).toString("base64");
  try {
    const response = await axios.get(url, {
      headers: { Authorization: `Basic ${auth}` }
    });
    return response.data.access_token;
  } catch (err) {
    console.error("Access token error:", err.response.data);
  }
}

// STK Push
app.post('/stk/push', async (req, res) => {
  const { phone, amount, bundle } = req.body;
  const token = await getAccessToken();
  const timestamp = new Date().toISOString().replace(/[-T:Z.]/g, '').slice(0, 14);
  const password = Buffer.from(shortcode + passkey + timestamp).toString('base64');

  const stkPushUrl =
    mpesaEnv === "production"
      ? "https://api.safaricom.co.ke/mpesa/stkpush/v1/processrequest"
      : "https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest";

  const data = {
    BusinessShortCode: shortcode,
    Password: password,
    Timestamp: timestamp,
    TransactionType: "CustomerPayBillOnline",
    Amount: amount,
    PartyA: phone,
    PartyB: shortcode,
    PhoneNumber: phone,
    CallBackURL: callbackURL,
    AccountReference: bundle,
    TransactionDesc: `Buying ${bundle}`
  };

  try {
    const response = await axios.post(stkPushUrl, data, {
      headers: { Authorization: `Bearer ${token}` }
    });
    res.json(response.data);
  } catch (err) {
    console.error("STK Push error:", err.response.data);
    res.status(500).json({ error: "Payment failed" });
  }
});

// Start server
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
